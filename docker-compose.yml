services:
  exnux:
    container_name: "exnux"
    build: "."
    cap_add:
      - SYS_PTRACE
    privileged: true
    stdin_open: true # -i
    tty: true # -t
    network_mode: "host"
    environment:
      DISPLAY: "${DISPLAY}"
      XAUTHORITY: "${XAUTHORITY}"
      LANG: en_US.UTF-8
      _JAVA_OPTIONS: "${_JAVA_OPTIONS}"
      LC_CTYPE: "en_US.UTF-8"
      LC_NUMERIC: "en_US.UTF-8"
      LC_TIME: "en_US.UTF-8"
      LC_COLLATE: "en_US.UTF-8"
      LC_MONETARY: "en_US.UTF-8"
      LC_MESSAGES: "en_US.UTF-8"
      LC_PAPER: "en_US.UTF-8"
      LC_NAME: "en_US.UTF-8"
      LC_ADDRESS: "en_US.UTF-8"
      LC_TELEPHONE: "en_US.UTF-8"
      LC_MEASUREMENT: "en_US.UTF-8"
      LC_IDENTIFICATION: "en_US.UTF-8"
    volumes:
      - "${XAUTHORITY}:/home/${USERNAME}/.Xauthority"
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
      - "/:/home/${USERNAME}/root"
      - "${HOME}:/home/${USERNAME}/home"
      - "${HOME}/.ssh:/home/${USERNAME}/.ssh"
      - "./cache/swp:/home/${USERNAME}/.cache/swp"
      - "./cache/.zsh_history:/home/${USERNAME}/.zsh_history"
      - "./cache/.bash_history:/home/${USERNAME}/.bash_history"
      - "./cache/.gdb_history:/home/${USERNAME}/.gdb_history"
      - "./cache/.cache/radare2/history:/home/${USERNAME}/.cache/radare2/history"
      - "./cache/.config/github-copilot/hosts.json:/home/${USERNAME}/.config/github-copilot/hosts.json"
      - "./cache/.msf4/history:/home/${USERNAME}/.msf4/history"
      - "./cache/mytags:/home/${USERNAME}/.config/nvim/ctags/mytags"
      - "${HOME}/Downloads:/home/${USERNAME}/Downloads"
      - "${HOME}/Documents:/home/${USERNAME}/Documents"
      - "${HOME}/Pictures:/home/${USERNAME}/Pictures"
      - "./cache/treesitter/parser:/home/${USERNAME}/.config/nvim/bundle/nvim-treesitter/parser/"
      - "./cache/treesitter/parser-info:/home/${USERNAME}/.config/nvim/bundle/nvim-treesitter/parser-info/"
      - "/var/run/docker.sock:/var/run/docker.sock"
    devices:
      - "/dev/dri"
      - "/dev/snd"
    command: "/bin/bash"
  msf-postgres:
    container_name: "msf-postgres"
    network_mode: "host"
    environment:
      POSTGRES_USER: "msf"
      POSTGRES_PASSWORD: "msf"
    volumes:
      - "msf-postgres-pgdata:/var/lib/postgresql/data"
    image: "postgres:14.2"
  apt-cacher-ng:
    container_name: "apt-cacher-ng"
    image: "sameersbn/apt-cacher-ng:3.3-20200524"
    volumes:
      - "/srv/docker/apt-cacher-ng:/var/cache/apt-cacher-ng"
    ports:
      - "172.17.0.1:3142:3142"

volumes:
  msf-postgres-pgdata:

