#!/bin/bash
CMD="$1"
# Use buildkit (allows you to build stages in parallel)
export DOCKER_BUILDKIT=1

#Ensure home variable is set
export HOME=${HOME:-/root}

# Ensure DISPLAY and XAUTHORITY are set, if not just guess
export XAUTHORITY=${XAUTHORITY:-$HOME/.Xauthority}
export DISPLAY=${DISPLAY:-:0}

# This is the username from the Dockerfile
export USERNAME=nonroot

# Find this scripts location
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
cd $SCRIPT_DIR

# Create all the cache directories and files (to prevent these being owned by root)
mkdir -p $SCRIPT_DIR/cache
mkdir -p $SCRIPT_DIR/cache/mytags
mkdir -p $SCRIPT_DIR/cache/.cache/radare2
mkdir -p $SCRIPT_DIR/cache/treesitter/
mkdir -p $SCRIPT_DIR/cache/treesitter/parser
mkdir -p $SCRIPT_DIR/cache/treesitter/parser-info
mkdir -p $SCRIPT_DIR/cache/.msf4
touch -a $SCRIPT_DIR/cache/.zsh_history
touch -a $SCRIPT_DIR/cache/.bash_history
touch -a $SCRIPT_DIR/cache/.gdb_history
touch -a $SCRIPT_DIR/cache/.cache/radare2/history
touch -a $SCRIPT_DIR/cache/.msf4/history

case "$CMD" in
    init)
        sudo apt-get install docker.io git
        sudo curl -SL https://github.com/docker/compose/releases/download/v2.4.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    ;;
    build)
        docker-compose build exnux
    ;;
    build-apt-cache)
        docker-compose up -d apt-cacher-ng
        sleep 5
        docker-compose build --build-arg APT_PROXY="http://172.17.0.1:3142" exnux
        docker-compose down apt-cacher-ng
    ;;
    start-headless)
        DOCKER_GROUP_ID=$(getent group docker | awk -F: '{print $3}')
        docker-compose up -d exnux msf-postgres
        docker-compose exec exnux /usr/bin/sudo groupmod -g $DOCKER_GROUP_ID docker
    ;;
    start)
        $0 start-headless
        docker-compose exec exnux /usr/bin/byobu
    ;;
    start-gui)
        $0 start-headless
        docker-compose exec -d exnux alacritty --command byobu
    ;;
    clean)
        docker-compose down
    ;;
    pull)
        git stash
        git pull --rebase origin master
        git submodule update --init --recursive
        git stash pop
    ;;
    distclean)
        $0 clean
        git stash
        git clean -fdx :dotfiles
        git reset --hard origin/master
    ;;
    *)
        echo $0 [COMMAND]
        echo ""
        echo -e "Commands:\n" \
            "  init             install necessary packages (git, docker, docker-compose)\n" \
            "  build            Builds container image\n" \
            "  build-apt-cache  Builds container image with an apt-cacher-ng proxy server\n" \
            "  start            Starts exnux tmux in current shell\n" \
            "  start-gui        Starts exnux tmux in alacritty\n" \
            "  pull             Updates the repo from origin/master and initializes submodules\n" \
            "  clean            Stops all containers\n" \
            "  distclean        Tries to restore files to a fresh state\n"
    ;;
esac
