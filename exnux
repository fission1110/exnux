#!/bin/bash
CMD=$1
# DISPLAY=:50
# XAUTHORITY=/home/$USER/.Xauthority

# SYS_PTRACE for GDB and r2. seccom=unconfined for C++ debugging
# /dev/dri for amd/ati gpu acceleration

# echo "/tmp/cores/core.%e.%p.%h.%t" > /proc/sys/kernel/core_pattern

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
USERNAME=nonroot
NAME=exnux
TAG=v0.1
case $CMD in
    build)
        cd $SCRIPT_DIR
        docker build -t $NAME:$TAG .
    ;;
    build-apt-cache)
        cd $SCRIPT_DIR
        docker run --rm --name apt-cacher-ng --init -d \
            -p 172.17.0.1:3142:3142 \
            --volume /srv/docker/apt-cacher-ng:/var/cache/apt-cacher-ng \
            sameersbn/apt-cacher-ng:3.3-20200524
        docker build -t $NAME:$TAG --add-host host.docker.internal:172.17.0.1 --build-arg=APT_PROXY="http://host.docker.internal:3142" .
        docker stop apt-cacher-ng
    ;;
    start-headless)
        $0 net
        docker run --rm -it -d --name $NAME --network $NAME-net \
            --cap-add=SYS_PTRACE --security-opt seccomp=unconfined \
            -v /tmp/.X11-unix:/tmp/.X11-unix:rw \
            -v $SCRIPT_DIR/dotfiles:/home/$USERNAME \
            -v $HOME/.Xauthority:/home/$USERNAME/.Xauthority \
            -e "XAUTHORITY=/home/$USERNAME/.Xauthority" \
            -h "$(hostname)" \
            -e "DISPLAY=$DISPLAY" \
            --device /dev/dri \
            -v /:/home/$USERNAME/root \
            $NAME:$TAG /bin/bash
    ;;
    start)
        $0 start-headless
        docker exec -it -w /home/$USERNAME/root/$PWD $NAME /usr/bin/byobu
    ;;
    msf-postgres)
        $0 start-headless
        docker volume create msf-postgres-pgdata
        docker run --rm --name msf-postgres --network $NAME-net \
            -e POSTGRES_PASSWORD=msf \
            -e POSTGRES_USER=msf \
            -v msf-postgres-pgdata:/var/lib/postgresql/data \
            -d postgres:14.2
    ;;
    net)
        docker network create $NAME-net 2> /dev/null
    ;;
    clean)
        docker stop msf-postgres
        docker stop $NAME
    ;;
    distclean)
        $0 clean
        docker volume msf-postgres-pgdata 2>/dev/null

        cd $SCRIPT_DIR
        git clean -fdx :dotfiles
    ;;
    *)
        echo "$0 build|start|clean|distclean|build-apt-cache|msf-postgres"
    ;;
esac
